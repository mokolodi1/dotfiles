;; This is a file that I call from my handy dandy .emacs file. 

; simple
(setq column-number-mode t)
(setq line-number-mode t)
(global-set-key (kbd "DEL") 'backward-delete-char)

;; general settings
(setq ring-bell-function 'ignore)	; non-sound bell
(defalias 'yes-or-no-p 'y-or-n-p)	; typing out yes and no

; typing
(show-paren-mode t)			; highlight parenthesis
(setq show-paren-style 'parethesis)	; highlihght just parenthesis
(setq echo-keystrokes 0.1)		; quick keystrokes
(set-keyboard-coding-system nil)	; for using a Mac

; modes
(add-hook 'lisp-mode-hook 		; CLISP
	  (lambda ()
	    (auto-fill-mode)
	    (set-fill-column 80)
	    (set (make-local-variable 'lisp-indent-function)
		 'common-lisp-indent-function) ; not dumb indentation
	    (set-lisp-comments)))

(add-hook 'emacs-lisp-mode-hook		; EMACS LISP
	  (lambda ()
	    (auto-fill-mode)
	    (set-fill-column 80)
	    (set-lisp-comments)))

(add-hook 'c-mode-common-hook		; C-like languages
	  (lambda ()
	    (auto-fill-mode 80)
	    ;; norm
	    (setq c-basic-offset 4
		  indent-tabs-mode t
		  c-backspace-function 'backward-delete-char
		  c-tab-always-indent nil
		  tab-width 4)
	    ;; indentation of openning { in blocks
	    (c-set-offset 'substatement-open 0)
	    ;; uncommenting a region
	    (local-set-key (kbd "C-c C-u") 'uncomment-region)))

;; hide show minor mode
(hs-minor-mode t)
(global-set-key (kbd "C-c C-s") 'hs-show-block)
(global-set-key (kbd "C-c C-b") 'hs-hide-block)
(global-set-key (kbd "C-c C-M-s") 'hs-show-all)
(global-set-key (kbd "C-c C-M-b") 'hs-hide-all)

; disable autosave
(setq auto-save-default nil)		; autosave
(setq backup-inhibited t)		; backup

; keybindings
(global-set-key (kbd "RET") 'newline-and-indent) ; indent after new line insert
(global-set-key (kbd "C-c <left>") 'windmove-left)
(global-set-key (kbd "C-c <right>") 'windmove-right)
(global-set-key (kbd "C-c <up>") 'windmove-up)
(global-set-key (kbd "C-c <down>") 'windmove-down)

(defun set-lisp-comments ()		; lisp comments
  (setq comment-start "; "
	comment-end ""))

(defun insert-space-or-newline-and-indent ()
  (interactive)
  (if (>= (current-column) fill-column)
      (newline-and-indent)
    (insert-char ? )))


;; Enable mouse support
(unless window-system
  (require 'mouse)
  (xterm-mouse-mode t)
  (global-set-key [mouse-4] '(lambda ()
			       (interactive)
			       (scroll-down
				1)))
  (global-set-key [mouse-5] '(lambda ()
			       (interactive)
			       (scroll-up
				1)))
  (defun track-mouse (e))
  (setq mouse-sel-mode t))
